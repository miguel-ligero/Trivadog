<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">C:\xampp\htdocs\Proyecto\trivadog</parameter>
    <parameter key="kernel.environment">env</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.cache_dir">C:\xampp\htdocs\Proyecto\trivadog\var\cache\env</parameter>
    <parameter key="kernel.logs_dir">C:\xampp\htdocs\Proyecto\trivadog\var\log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="TwigExtraBundle">Twig\Extra\TwigExtraBundle\TwigExtraBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="EasyAdminBundle">EasyCorp\Bundle\EasyAdminBundle\EasyAdminBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="TwigExtraBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\Proyecto\trivadog\vendor\twig\extra-bundle\src</parameter>
        <parameter key="namespace">Twig\Extra\TwigExtraBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\Proyecto\trivadog\vendor\sensio\framework-extra-bundle\src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\Proyecto\trivadog\vendor\doctrine\doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\Proyecto\trivadog\vendor\doctrine\doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="EasyAdminBundle" type="collection">
        <parameter key="path">C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src</parameter>
        <parameter key="namespace">EasyCorp\Bundle\EasyAdminBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_KernelEnvDebugContainer</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Workflow\Event\GuardEvent">workflow.guard</parameter>
      <parameter key="Symfony\Component\Workflow\Event\LeaveEvent">workflow.leave</parameter>
      <parameter key="Symfony\Component\Workflow\Event\TransitionEvent">workflow.transition</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnterEvent">workflow.enter</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnteredEvent">workflow.entered</parameter>
      <parameter key="Symfony\Component\Workflow\Event\CompletedEvent">workflow.completed</parameter>
      <parameter key="Symfony\Component\Workflow\Event\AnnounceEvent">workflow.announce</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationFailureEvent">security.authentication.failure</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path">null</parameter>
    <parameter key="asset.request_context.secure">null</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">C:\xampp\htdocs\Proyecto\trivadog/translations</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/App_KernelEnvDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/serialization.php</parameter>
    <parameter key="serializer.mapping.cache.prefix"></parameter>
    <parameter key="security.role_hierarchy.roles" type="collection"/>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">C:\xampp\htdocs\Proyecto\trivadog/templates</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine_migrations.dir_name">C:\xampp\htdocs\Proyecto\trivadog/src/Migrations</parameter>
    <parameter key="doctrine_migrations.namespace">DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.column_name">version</parameter>
    <parameter key="doctrine_migrations.column_length">14</parameter>
    <parameter key="doctrine_migrations.executed_at_column_name">executed_at</parameter>
    <parameter key="doctrine_migrations.all_or_nothing">false</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="doctrine_migrations.custom_template">null</parameter>
    <parameter key="doctrine_migrations.organize_migrations">false</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection"/>
    <parameter key="easyadmin.config" type="collection"/>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="App\Controller\AutocompleteController" class="App\Controller\AutocompleteController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\AutocompleteController"/>
      </call>
    </service>
    <service id="App\Controller\ClientesController" class="App\Controller\ClientesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\ClientesController"/>
      </call>
    </service>
    <service id="App\Controller\ComentarioshospedajeController" class="App\Controller\ComentarioshospedajeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\ComentarioshospedajeController"/>
      </call>
    </service>
    <service id="App\Controller\GeonameController" class="App\Controller\GeonameController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\GeonameController"/>
      </call>
    </service>
    <service id="App\Controller\HabitacionesController" class="App\Controller\HabitacionesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\HabitacionesController"/>
      </call>
    </service>
    <service id="App\Controller\HomeController" class="App\Controller\HomeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\HomeController"/>
      </call>
    </service>
    <service id="App\Controller\HospedajeController" class="App\Controller\HospedajeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\HospedajeController"/>
      </call>
    </service>
    <service id="App\Controller\MultimediaController" class="App\Controller\MultimediaController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\MultimediaController"/>
      </call>
    </service>
    <service id="App\Controller\PerfilController" class="App\Controller\PerfilController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\PerfilController"/>
      </call>
    </service>
    <service id="App\Controller\ProveedoresController" class="App\Controller\ProveedoresController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\ProveedoresController"/>
      </call>
    </service>
    <service id="App\Controller\RegistrousuarioController" class="App\Controller\RegistrousuarioController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\RegistrousuarioController"/>
      </call>
    </service>
    <service id="App\Controller\ReservasController" class="App\Controller\ReservasController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\ReservasController"/>
      </call>
    </service>
    <service id="App\Controller\SeguridadController" class="App\Controller\SeguridadController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\SeguridadController"/>
      </call>
    </service>
    <service id="App\Controller\ServiciosController" class="App\Controller\ServiciosController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\ServiciosController"/>
      </call>
    </service>
    <service id="App\Controller\ServicioshabitacionesController" class="App\Controller\ServicioshabitacionesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\ServicioshabitacionesController"/>
      </call>
    </service>
    <service id="App\Controller\TipohospedajeController" class="App\Controller\TipohospedajeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.g9CqTPp.App\Controller\TipohospedajeController"/>
      </call>
    </service>
    <service id="App\Form\ClientesType" class="App\Form\ClientesType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ComentarioshospedajeType" class="App\Form\ComentarioshospedajeType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\HabitacionesType" class="App\Form\HabitacionesType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\HospedajeType" class="App\Form\HospedajeType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\MultimediaType" class="App\Form\MultimediaType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\PerfilType" class="App\Form\PerfilType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ReservasType" class="App\Form\ReservasType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ServiciosType" class="App\Form\ServiciosType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ServicioshabitacionesType" class="App\Form\ServicioshabitacionesType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TipohospedajeType" class="App\Form\TipohospedajeType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Repository\AutocompleteRepository" class="App\Repository\AutocompleteRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ClientesRepository" class="App\Repository\ClientesRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ComentarioshospedajeRepository" class="App\Repository\ComentarioshospedajeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\GeonameRepository" class="App\Repository\GeonameRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\HabitacionesRepository" class="App\Repository\HabitacionesRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\HospedajeRepository" class="App\Repository\HospedajeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\MultimediaRepository" class="App\Repository\MultimediaRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PerfilRepository" class="App\Repository\PerfilRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ProveedoresRepository" class="App\Repository\ProveedoresRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ReservasRepository" class="App\Repository\ReservasRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ServiciosRepository" class="App\Repository\ServiciosRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ServicioshabitacionesRepository" class="App\Repository\ServicioshabitacionesRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TipohospedajeRepository" class="App\Repository\TipohospedajeRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Security\AutentificadorAuthenticator" class="App\Security\AutentificadorAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/App_KernelEnvDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.hbcatdF"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor" public="false">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger" public="false">
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
    </service>
    <service id="container.getenv" class="Closure" public="false">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" public="false" abstract="true">
      <argument type="service" id="container.getenv"/>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator.Vt79qxb"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id=".2_~O4wrqDG" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
    </service>
    <service id=".1_~O4wrqDG" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service" id=".1_~O4wrqDG"/>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog</argument>
      <argument type="service" id=".2_~O4wrqDG"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <tag name="container.no_preload"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand" public="false">
      <tag name="console.command" command="cache:pool:list"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand" public="false">
      <tag name="console.command" command="lint:container"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog/translations</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog/templates</argument>
      <argument type="collection">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations</argument>
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations</argument>
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog/translations</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog/templates</argument>
      <argument type="collection">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations</argument>
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations</argument>
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\Form</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\ClientesType</argument>
        <argument>App\Form\ComentarioshospedajeType</argument>
        <argument>App\Form\HabitacionesType</argument>
        <argument>App\Form\HospedajeType</argument>
        <argument>App\Form\MultimediaType</argument>
        <argument>App\Form\PerfilType</argument>
        <argument>App\Form\ReservasType</argument>
        <argument>App\Form\ServiciosType</argument>
        <argument>App\Form\ServicioshabitacionesType</argument>
        <argument>App\Form\TipohospedajeType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ColorType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\FiltersFormType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\CrudFormType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EaCrudFormTypeExtension</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Extension\CollectionTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand" public="false">
      <tag name="console.command" command="secrets:set"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand" public="false">
      <tag name="console.command" command="secrets:remove"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand" public="false">
      <tag name="console.command" command="secrets:generate-keys"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand" public="false">
      <tag name="console.command" command="secrets:list"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand" public="false">
      <tag name="console.command" command="secrets:decrypt-to-local"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand" public="false">
      <tag name="console.command" command="secrets:encrypt-from-local"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>fk078yzknF</argument>
      <argument>0</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>0W20t5mrST</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>32j9n9J7o7</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>AgkZoGJaGs</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>O75bkoNZ9-</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>UnqwRdAwlx</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata" type="service" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator" public="false"/>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".1_NativeFileSessionHandler~vYMW463" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument type="service" id="session_listener"/>
        <argument>onSessionUsage</argument>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false">
      <factory service="session" method="getFlashBag"/>
      <deprecated package="symfony/framework-bundle" version="5.1">The "%service_id%" service is deprecated, use "$session-&gt;getFlashBag()" instead.</deprecated>
    </service>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false">
      <argument>attributes</argument>
      <factory service="session" method="getBag"/>
      <deprecated package="symfony/framework-bundle" version="5.1">The "%service_id%" service is deprecated, use "$session-&gt;getAttributeBag()" instead.</deprecated>
    </service>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~vYMW463"/>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler" public="false">
      <argument></argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.D0bqbKK"/>
      <argument>true</argument>
    </service>
    <service id="session.marshaller" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\IdentityMarshaller" public="false"/>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry" public="false">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id=".service_locator.StcfchA"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EaCrudFormTypeExtension"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CollectionType" type="iterator">
          <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\CollectionTypeExtension"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="false">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type.color" class="Symfony\Component\Form\Extension\Core\Type\ColorType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="false">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service">
        <service class="string">
          <factory service="router.request_context" method="getBaseUrl"/>
        </service>
      </argument>
      <argument type="service">
        <service class="bool">
          <factory service="router.request_context" method="isSecure"/>
        </service>
      </argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets.remote_json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\RemoteJsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument type="service" id="http_client"/>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="http_client.client"/>
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.http_client" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="mailer.mailer" class="Symfony\Component\Mailer\Mailer">
      <argument type="service" id="mailer.transports"/>
      <argument>null</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="mailer.transports" class="Symfony\Component\Mailer\Transport\Transports">
      <argument type="collection">
        <argument key="main">%env(MAILER_DSN)%</argument>
      </argument>
      <factory service="mailer.transport_factory" method="fromStrings"/>
    </service>
    <service id="mailer.transport_factory" class="Symfony\Component\Mailer\Transport">
      <argument type="tagged_iterator" tag="mailer.transport_factory"/>
    </service>
    <service id="mailer.default_transport" class="Symfony\Component\Mailer\Transport\TransportInterface">
      <argument>%env(MAILER_DSN)%</argument>
      <factory service="mailer.transport_factory" method="fromString"/>
    </service>
    <service id="mailer.messenger.message_handler" class="Symfony\Component\Mailer\Messenger\MessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="mailer.transports"/>
    </service>
    <service id="mailer.envelope_listener" class="Symfony\Component\Mailer\EventListener\EnvelopeListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="mailer.logger_message_listener" class="Symfony\Component\Mailer\EventListener\MessageLoggerListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="mailer.transport_factory.abstract" class="Symfony\Component\Mailer\Transport\AbstractTransportFactory" abstract="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.null" class="Symfony\Component\Mailer\Transport\NullTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.sendmail" class="Symfony\Component\Mailer\Transport\SendmailTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.smtp" class="Symfony\Component\Mailer\Transport\Smtp\EsmtpTransportFactory">
      <tag name="mailer.transport_factory" priority="-100"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="notifier" class="Symfony\Component\Notifier\Notifier">
      <argument type="service" id=".service_locator.jLgc6By"/>
      <argument type="service" id="notifier.channel_policy" on-invalid="ignore"/>
      <call method="addAdminRecipient">
        <argument type="service" id="notifier.admin_recipient.0"/>
      </call>
    </service>
    <service id="notifier.channel_policy" class="Symfony\Component\Notifier\Channel\ChannelPolicy">
      <argument type="collection">
        <argument key="urgent" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="high" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="medium" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="low" type="collection">
          <argument>email</argument>
        </argument>
      </argument>
    </service>
    <service id="notifier.channel.browser" class="Symfony\Component\Notifier\Channel\BrowserChannel">
      <tag name="notifier.channel" channel="browser"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="notifier.channel.chat" class="Symfony\Component\Notifier\Channel\ChatChannel">
      <tag name="notifier.channel" channel="chat"/>
      <argument type="service" id="chatter.transports"/>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.sms" class="Symfony\Component\Notifier\Channel\SmsChannel">
      <tag name="notifier.channel" channel="sms"/>
      <argument type="service" id="texter.transports"/>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.email" class="Symfony\Component\Notifier\Channel\EmailChannel">
      <tag name="notifier.channel" channel="email"/>
      <argument type="service" id="mailer.transports"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="notifier.monolog_handler" class="Symfony\Bridge\Monolog\Handler\NotifierHandler">
      <argument type="service" id="notifier"/>
    </service>
    <service id="notifier.failed_message_listener" class="Symfony\Component\Notifier\EventListener\SendFailedMessageToNotifierListener">
      <argument type="service" id="notifier"/>
    </service>
    <service id="chatter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="chatter.transport_factory" method="fromStrings"/>
    </service>
    <service id="chatter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="chatter.transport_factory"/>
    </service>
    <service id="chatter.messenger.chat_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\ChatMessage"/>
      <argument type="service" id="chatter.transports"/>
    </service>
    <service id="texter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="texter.transport_factory" method="fromStrings"/>
    </service>
    <service id="texter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="texter.transport_factory"/>
    </service>
    <service id="texter.messenger.sms_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\SmsMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="notifier.transport_factory.abstract" class="Symfony\Component\Notifier\Transport\AbstractTransportFactory" abstract="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.transport_factory.null" class="Symfony\Component\Notifier\Transport\NullTransportFactory">
      <tag name="chatter.transport_factory"/>
      <tag name="texter.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.admin_recipient.0" class="Symfony\Component\Notifier\Recipient\AdminRecipient">
      <argument>admin@example.com</argument>
      <argument></argument>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="true">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.Xl5XdWY"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument type="service" id="http_client" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader" public="false">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator" public="false">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.6RweocE"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.ar.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.ar.php</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.az.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.az.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.be.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.be.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.bg.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.bg.php</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.ca.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.ca.php</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.cs.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.cs.php</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.da.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.da.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.da.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.da.php</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.de.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.de.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.de.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.de.php</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.el.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.el.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.el.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.el.php</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.en.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.en.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.en.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.en.php</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.es.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.es.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.es.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.es.php</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.et.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.eu.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.eu.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.eu.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.eu.php</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.fa.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.fa.php</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.fi.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.fi.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.fi.php</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.fr.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.fr.php</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.gl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.gl.php</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.he.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.he.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.hr.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.hr.php</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.hu.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.hu.php</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.hy.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.id.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.id.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.it.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.it.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.it.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.it.php</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.lt.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.lt.php</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.mn.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.nb.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.nb.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.nl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.nl.php</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.nn.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.nn.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.no.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.no.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.no.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.no.php</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.pl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.pl.php</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.pt.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.pt.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.pt.php</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.pt_BR.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.pt_BR.php</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.ro.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.ro.php</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.ru.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.ru.php</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.sl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.sl.php</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.sv.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.sv.php</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.th.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.tl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.tl.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.tr.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.tr.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.tr.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.tr.php</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.uk.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.uk.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.uk.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.uk.php</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.vi.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.vi.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.zh_CN.xlf</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.zh_CN.php</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations\validators.zh_TW.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations\security.pt_PT.xlf</argument>
          </argument>
          <argument key="sr_RS" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.sr_RS.php</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\framework-bundle/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-bundle/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bundle/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\twig\extra-bundle\src/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\sensio\framework-extra-bundle\src/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\doctrine\doctrine-bundle/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\doctrine\doctrine-migrations-bundle/translations</argument>
          <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\monolog-bundle/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\validator/Resources/translations</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\form/Resources/translations</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-core/Resources/translations</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/translations</argument>
            <argument>translations</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\framework-bundle/translations</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-bundle/translations</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bundle/translations</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\twig\extra-bundle\src/translations</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\sensio\framework-extra-bundle\src/translations</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\doctrine\doctrine-bundle/translations</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\doctrine\doctrine-migrations-bundle/translations</argument>
            <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\monolog-bundle/translations</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader" public="false">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader" public="false">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader" public="false">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader" public="false">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader" public="false">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader" public="false">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader" public="false">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader" public="false">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader" public="false">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader" public="false">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader" public="false">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper" public="false">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper" public="false">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper" public="false">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper" public="false">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper" public="false">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper" public="false">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper" public="false">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper" public="false">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper" public="false">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor" public="false">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader" public="false">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor" public="false">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter" public="false">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.s2oGJED.translation.warmer"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\EventListener\ExceptionListener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\EventListener\AdminContextListener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\EventListener\CrudResponseListener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service" id="mailer.envelope_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service" id="mailer.logger_message_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service" id="twig.mailer.message_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".2_int~cFQl3n0" class="int" public="false">
      <factory service="router.request_context" method="getHttpsPort"/>
    </service>
    <service id=".1_int~cFQl3n0" class="int" public="false">
      <factory service="router.request_context" method="getHttpPort"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.51fe2Cf"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.DWvytH9.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">C:\xampp\htdocs\Proyecto\trivadog\var\cache\env</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="addExpressionLanguageProvider">
        <argument type="service" id="router.expression_language_provider"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
      <call method="setParameter">
        <argument>_functions</argument>
        <argument type="service" id="router.expression_language_provider" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\Routing\RequestContext" method="fromUri"/>
    </service>
    <service id="router.expression_language_provider" class="Symfony\Component\Routing\Matcher\ExpressionLanguageProvider" public="false">
      <tag name="routing.expression_language_provider"/>
      <argument type="service" id=".service_locator.t1zFPXA"/>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.LHmLVnd.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service" id=".1_int~cFQl3n0"/>
      <argument type="service" id=".2_int~cFQl3n0"/>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~isdtDwU" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~isdtDwU" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~isdtDwU"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~isdtDwU"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument>true</argument>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog/config/secrets/env</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString" public="false">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>C:\xampp\htdocs\Proyecto\trivadog/.env.env.local</argument>
    </service>
    <service id=".2_~3hLV9X9" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id=".1_~3hLV9X9" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="serializer.denormalizer.unwrapping"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata" public="false">
      <argument type="service" id="serializer.mapping.cache_class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-900"/>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument>true</argument>
    </service>
    <service id="serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer" public="false">
      <tag name="serializer.normalizer" priority="1000"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.cache_class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer" public="false">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface" public="false">
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.mapping.cache_class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\CacheClassMetadataFactory" public="false">
      <argument type="service" id="serializer.mapping.cache_class_metadata_factory.inner"/>
      <argument type="service" id="serializer.mapping.cache.symfony"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter" public="false"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter" public="false">
      <argument type="service" id="serializer.mapping.cache_class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.cache_class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" public="false">
      <argument type="service" id="serializer"/>
      <argument type="service" id=".1_~3hLV9X9"/>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service" id=".2_~3hLV9X9"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor" public="false">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes" public="false">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.nAEpldE"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="false"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".service_locator.eYaJuY9"/>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false"/>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="App\Entity\Clientes" type="collection">
          <argument key="algorithm">auto</argument>
          <argument key="migrate_from" type="collection"/>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="encode_as_base64">true</argument>
          <argument key="iterations">5000</argument>
          <argument key="cost">null</argument>
          <argument key="memory_cost">null</argument>
          <argument key="time_cost">null</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false">
      <argument type="service" id="cache.security_expression_language"/>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.event_dispatcher.event_bubbling_listener" class="Symfony\Bundle\SecurityBundle\EventListener\FirewallEventBubblingListener" public="false" abstract="true">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection"/>
    </service>
    <service id="security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleVoter" public="false">
      <tag name="security.voter" priority="245"/>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.8hCvsSq"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.main">null</argument>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>app_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>1jgi5WYuuI</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id=".2_int~Ch9hOA0" class="int" public="false">
      <factory service="router.request_context" method="getHttpsPort"/>
    </service>
    <service id=".1_int~Ch9hOA0" class="int" public="false">
      <factory service="router.request_context" method="getHttpPort"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument type="service" id=".1_int~Ch9hOA0"/>
      <argument type="service" id=".2_int~Ch9hOA0"/>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id=".security.request_matcher.5dJADCx"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.crKVCof"/>
        <argument type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_PROVIDER</argument>
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.vavcuCq"/>
        <argument type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_PROVIDER</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.N4eHN03"/>
        <argument type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.t_Dlj8z"/>
        <argument type="collection">
          <argument>ROLE_PROVIDER</argument>
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.n_agHLq"/>
        <argument type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher._LUS4wN"/>
        <argument type="collection">
          <argument>ROLE_PROVIDER</argument>
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.RzpJGdV"/>
        <argument type="collection">
          <argument>ROLE_PROVIDER</argument>
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.kdn_4Y."/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.WwV0S5N"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.OhxiNyI"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
        <argument type="service" id="security.user.provider.concrete.users"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.logout.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" public="false" abstract="true"/>
    <service id="security.logout.listener.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.listener.default" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.guard.main"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.user.provider.concrete.users_in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false">
      <argument type="collection"/>
    </service>
    <service id="security.user.provider.concrete.users" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>App\Entity\Clientes</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.user_providers" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
        <argument type="service" id="security.user.provider.concrete.users"/>
      </argument>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.users_in_memory</argument>
      <argument>main</argument>
      <argument>App\Security\AutentificadorAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="security.event_dispatcher.main" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service" id="security.event_dispatcher.main.event_bubbling_listener"/>
          <argument>bubbleEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginFailureEvent</argument>
        <argument type="collection">
          <argument type="service" id="security.event_dispatcher.main.event_bubbling_listener"/>
          <argument>bubbleEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service" id="security.event_dispatcher.main.event_bubbling_listener"/>
          <argument>bubbleEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service" id="security.event_dispatcher.main.event_bubbling_listener"/>
          <argument>bubbleEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service" id="security.logout.listener.default.main"/>
          <argument>onLogout</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service" id="security.logout.listener.session.main"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.event_dispatcher.main.event_bubbling_listener" class="Symfony\Bundle\SecurityBundle\EventListener\FirewallEventBubblingListener" public="false">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
        <argument type="service" id="security.user.provider.concrete.users"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.event_dispatcher.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">app_logout</argument>
      </argument>
    </service>
    <service id="security.logout.listener.default.main" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" public="false">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.logout.listener.session.main" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" public="false">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
    </service>
    <service id="security.authentication.provider.guard.main" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="App\Security\AutentificadorAuthenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.users_in_memory"/>
      <argument>main</argument>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard.main" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.users_in_memory"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>main</argument>
      <argument type="iterator">
        <argument type="service" id="App\Security\AutentificadorAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="App\Security\AutentificadorAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.guard.main"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.logout_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id=".service_locator.8hCvsSq" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id=".security.request_matcher.5dJADCx" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin</argument>
    </service>
    <service id=".security.request_matcher.crKVCof" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/reservas</argument>
    </service>
    <service id=".security.request_matcher.vavcuCq" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/registrousuario/editar</argument>
    </service>
    <service id=".security.request_matcher.N4eHN03" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/registrousuario/cuentacliente</argument>
    </service>
    <service id=".security.request_matcher.t_Dlj8z" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/hospedaje</argument>
    </service>
    <service id=".security.request_matcher.n_agHLq" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/comentarios</argument>
    </service>
    <service id=".security.request_matcher._LUS4wN" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/multimedia</argument>
    </service>
    <service id=".security.request_matcher.RzpJGdV" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/servicioshabitaciones</argument>
    </service>
    <service id=".security.request_matcher.kdn_4Y." class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/seguridad</argument>
    </service>
    <service id=".security.request_matcher.WwV0S5N" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/servicios</argument>
    </service>
    <service id=".security.request_matcher.OhxiNyI" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/home/back</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>App\Entity\Clientes</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id=".1_~djJQep2" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <tag name="container.preload" class="Twig\Cache\FilesystemCache"/>
      <tag name="container.preload" class="Twig\Extension\CoreExtension"/>
      <tag name="container.preload" class="Twig\Extension\EscaperExtension"/>
      <tag name="container.preload" class="Twig\Extension\OptimizerExtension"/>
      <tag name="container.preload" class="Twig\Extension\StagingExtension"/>
      <tag name="container.preload" class="Twig\ExtensionSet"/>
      <tag name="container.preload" class="Twig\Template"/>
      <tag name="container.preload" class="Twig\TemplateWrapper"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="autoescape">name</argument>
        <argument key="cache">C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Twig\EasyAdminTwigExtension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="registerUndefinedFilterCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFilter</argument>
        </argument>
      </call>
      <call method="registerUndefinedFunctionCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFunction</argument>
        </argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>env</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bridge/Resources/views/Email">email</argument>
        <argument key="C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.VF.njwi.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog</argument>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\framework-bundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\framework-bundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/views</argument>
        <argument>EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\easycorp\easyadmin-bundle\src/Resources/views</argument>
        <argument>!EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog/templates</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\vendor\symfony\twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor" public="false">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.MBcj_p5"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id=".1_~djJQep2"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="twig.mailer.message_listener" class="Symfony\Component\Mailer\EventListener\MessageListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service" id="twig.mime_body_renderer"/>
    </service>
    <service id="twig.mime_body_renderer" class="Symfony\Bridge\Twig\Mime\BodyRenderer">
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.missing_extension_suggestor" class="Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor" public="false"/>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.Wbzuv5A.sensio_framework_extra.view.listener"/>
      </call>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage"/>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id=".service_locator.xxFfgCP"/>
      <call method="addEventSubscriber">
        <argument type="service" id="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id=".1_ServiceLocator~oAwuA5t" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.exAOYo1"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\PdoCacheAdapterDoctrineSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>C:\xampp\htdocs\Proyecto\trivadog\src\Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.metadata"/>
    </service>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.result"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.query"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDumpSchemaDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsRollupDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsUpToDateDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand" class="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand" public="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Maker\Migrator"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog</argument>
      <call method="setName">
        <argument>make:admin:migration</argument>
      </call>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminDashboardCommand" class="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminDashboardCommand" public="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Maker\ClassMaker"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog</argument>
      <call method="setName">
        <argument>make:admin:dashboard</argument>
      </call>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeCrudControllerCommand" class="EasyCorp\Bundle\EasyAdminBundle\Command\MakeCrudControllerCommand" public="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog</argument>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Maker\ClassMaker"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>make:admin:crud</argument>
      </call>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Maker\ClassMaker" class="EasyCorp\Bundle\EasyAdminBundle\Maker\ClassMaker" public="false">
      <argument type="service" id="kernel"/>
      <argument>C:\xampp\htdocs\Proyecto\trivadog</argument>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Maker\Migrator" class="EasyCorp\Bundle\EasyAdminBundle\Maker\Migrator" public="false"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Cache\CacheWarmer" class="EasyCorp\Bundle\EasyAdminBundle\Cache\CacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Inspector\DataCollector" class="EasyCorp\Bundle\EasyAdminBundle\Inspector\DataCollector" public="false">
      <tag name="data_collector" id="easyadmin" template="@EasyAdmin/inspector/data_collector.html.twig"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\EventListener\ExceptionListener" class="EasyCorp\Bundle\EasyAdminBundle\EventListener\ExceptionListener" public="false">
      <tag name="kernel.event_listener" event="kernel.exception" priority="-64"/>
      <argument>true</argument>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Twig\EasyAdminTwigExtension" class="EasyCorp\Bundle\EasyAdminBundle\Twig\EasyAdminTwigExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EaCrudFormTypeExtension" class="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EaCrudFormTypeExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\CollectionTypeExtension" class="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\CollectionTypeExtension" public="false">
      <tag name="form.type_extension"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker" class="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker" public="false">
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Intl\IntlFormatter" class="EasyCorp\Bundle\EasyAdminBundle\Intl\IntlFormatter" public="false"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider" class="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\EventListener\AdminContextListener" class="EasyCorp\Bundle\EasyAdminBundle\EventListener\AdminContextListener" public="false">
      <tag name="kernel.event_listener" event="Symfony\Component\HttpKernel\Event\ControllerEvent"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\AdminContextFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\ControllerFactory"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\ControllerFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\ControllerFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry"/>
      <argument type="service" id="debug.controller_resolver"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\EventListener\CrudResponseListener" class="EasyCorp\Bundle\EasyAdminBundle\EventListener\CrudResponseListener" public="false">
      <tag name="kernel.event_listener" event="Symfony\Component\HttpKernel\Event\ViewEvent"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\AdminContextFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\AdminContextFactory" public="false">
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env</argument>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\MenuFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator" class="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\MenuFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\MenuFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityRepository" class="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityRepository" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\FormFactory"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\FieldFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\ActionFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityPaginator" class="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityPaginator" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityUpdater" class="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityUpdater" public="false">
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\PaginatorFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\PaginatorFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityPaginator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\FormFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\FormFactory" public="false">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\FieldFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\FieldFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker"/>
      <argument type="tagged_iterator" tag="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Provider\FieldProvider" class="EasyCorp\Bundle\EasyAdminBundle\Provider\FieldProvider" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\FilterFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\FilterFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="tagged_iterator" tag="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FiltersFormType" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FiltersFormType" public="false">
      <tag name="form.type" alias="ea_filters"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" public="false">
      <tag name="ea.filter_configurator" priority="9999"/>
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\ActionFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\ActionFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter" class="EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter" public="false">
      <tag name="security.voter"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Form\Type\CrudFormType" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\CrudFormType" public="false">
      <tag name="form.type" alias="ea_crud"/>
      <argument type="service" id="form.type_guesser.doctrine"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" public="false">
      <tag name="ea.field_configurator" priority="-9999"/>
      <tag name="ea.field_configurator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" public="false">
      <tag name="ea.field_configurator" priority="9999"/>
      <tag name="ea.field_configurator"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Intl\IntlFormatter"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Intl\IntlFormatter"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Intl\IntlFormatter"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\AutocompleteController" class="App\Controller\AutocompleteController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\AutocompleteController" class="App\Controller\AutocompleteController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\AutocompleteController" class="App\Controller\AutocompleteController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ClientesController" class="App\Controller\ClientesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ClientesController" class="App\Controller\ClientesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ClientesController" class="App\Controller\ClientesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ComentarioshospedajeController" class="App\Controller\ComentarioshospedajeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ComentarioshospedajeController" class="App\Controller\ComentarioshospedajeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ComentarioshospedajeController" class="App\Controller\ComentarioshospedajeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\GeonameController" class="App\Controller\GeonameController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\GeonameController" class="App\Controller\GeonameController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\GeonameController" class="App\Controller\GeonameController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\HabitacionesController" class="App\Controller\HabitacionesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\HabitacionesController" class="App\Controller\HabitacionesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\HabitacionesController" class="App\Controller\HabitacionesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\HomeController" class="App\Controller\HomeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\HomeController" class="App\Controller\HomeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\HomeController" class="App\Controller\HomeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\HospedajeController" class="App\Controller\HospedajeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\HospedajeController" class="App\Controller\HospedajeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\HospedajeController" class="App\Controller\HospedajeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\MultimediaController" class="App\Controller\MultimediaController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\MultimediaController" class="App\Controller\MultimediaController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\MultimediaController" class="App\Controller\MultimediaController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\PerfilController" class="App\Controller\PerfilController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\PerfilController" class="App\Controller\PerfilController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\PerfilController" class="App\Controller\PerfilController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ProveedoresController" class="App\Controller\ProveedoresController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ProveedoresController" class="App\Controller\ProveedoresController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ProveedoresController" class="App\Controller\ProveedoresController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\RegistrousuarioController" class="App\Controller\RegistrousuarioController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\RegistrousuarioController" class="App\Controller\RegistrousuarioController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\RegistrousuarioController" class="App\Controller\RegistrousuarioController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ReservasController" class="App\Controller\ReservasController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ReservasController" class="App\Controller\ReservasController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ReservasController" class="App\Controller\ReservasController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\SeguridadController" class="App\Controller\SeguridadController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\SeguridadController" class="App\Controller\SeguridadController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SeguridadController" class="App\Controller\SeguridadController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ServiciosController" class="App\Controller\ServiciosController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ServiciosController" class="App\Controller\ServiciosController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ServiciosController" class="App\Controller\ServiciosController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ServicioshabitacionesController" class="App\Controller\ServicioshabitacionesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ServicioshabitacionesController" class="App\Controller\ServicioshabitacionesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ServicioshabitacionesController" class="App\Controller\ServicioshabitacionesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\TipohospedajeController" class="App\Controller\TipohospedajeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\TipohospedajeController" class="App\Controller\TipohospedajeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TipohospedajeController" class="App\Controller\TipohospedajeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ClientesType" class="App\Form\ClientesType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ClientesType" class="App\Form\ClientesType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ComentarioshospedajeType" class="App\Form\ComentarioshospedajeType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ComentarioshospedajeType" class="App\Form\ComentarioshospedajeType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\HabitacionesType" class="App\Form\HabitacionesType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\HabitacionesType" class="App\Form\HabitacionesType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\HospedajeType" class="App\Form\HospedajeType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\HospedajeType" class="App\Form\HospedajeType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\MultimediaType" class="App\Form\MultimediaType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\MultimediaType" class="App\Form\MultimediaType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PerfilType" class="App\Form\PerfilType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PerfilType" class="App\Form\PerfilType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ReservasType" class="App\Form\ReservasType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ReservasType" class="App\Form\ReservasType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ServiciosType" class="App\Form\ServiciosType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ServiciosType" class="App\Form\ServiciosType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ServicioshabitacionesType" class="App\Form\ServicioshabitacionesType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ServicioshabitacionesType" class="App\Form\ServicioshabitacionesType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TipohospedajeType" class="App\Form\TipohospedajeType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TipohospedajeType" class="App\Form\TipohospedajeType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AutocompleteRepository" class="App\Repository\AutocompleteRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AutocompleteRepository" class="App\Repository\AutocompleteRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ClientesRepository" class="App\Repository\ClientesRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ClientesRepository" class="App\Repository\ClientesRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ComentarioshospedajeRepository" class="App\Repository\ComentarioshospedajeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ComentarioshospedajeRepository" class="App\Repository\ComentarioshospedajeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\GeonameRepository" class="App\Repository\GeonameRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\GeonameRepository" class="App\Repository\GeonameRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\HabitacionesRepository" class="App\Repository\HabitacionesRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\HabitacionesRepository" class="App\Repository\HabitacionesRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\HospedajeRepository" class="App\Repository\HospedajeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\HospedajeRepository" class="App\Repository\HospedajeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\MultimediaRepository" class="App\Repository\MultimediaRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\MultimediaRepository" class="App\Repository\MultimediaRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PerfilRepository" class="App\Repository\PerfilRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PerfilRepository" class="App\Repository\PerfilRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProveedoresRepository" class="App\Repository\ProveedoresRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProveedoresRepository" class="App\Repository\ProveedoresRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ReservasRepository" class="App\Repository\ReservasRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ReservasRepository" class="App\Repository\ReservasRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ServiciosRepository" class="App\Repository\ServiciosRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ServiciosRepository" class="App\Repository\ServiciosRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ServicioshabitacionesRepository" class="App\Repository\ServicioshabitacionesRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ServicioshabitacionesRepository" class="App\Repository\ServicioshabitacionesRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TipohospedajeRepository" class="App\Repository\TipohospedajeRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TipohospedajeRepository" class="App\Repository\TipohospedajeRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" public="false" abstract="true"/>
    <service id=".service_locator.WaGDpDt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service" id="container.env_var_processor"/>
        <argument key="bool" type="service" id="container.env_var_processor"/>
        <argument key="const" type="service" id="container.env_var_processor"/>
        <argument key="csv" type="service" id="container.env_var_processor"/>
        <argument key="default" type="service" id="container.env_var_processor"/>
        <argument key="file" type="service" id="container.env_var_processor"/>
        <argument key="float" type="service" id="container.env_var_processor"/>
        <argument key="int" type="service" id="container.env_var_processor"/>
        <argument key="json" type="service" id="container.env_var_processor"/>
        <argument key="key" type="service" id="container.env_var_processor"/>
        <argument key="query_string" type="service" id="container.env_var_processor"/>
        <argument key="require" type="service" id="container.env_var_processor"/>
        <argument key="resolve" type="service" id="container.env_var_processor"/>
        <argument key="string" type="service" id="container.env_var_processor"/>
        <argument key="trim" type="service" id="container.env_var_processor"/>
        <argument key="url" type="service" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id=".service_locator.beq5mCo" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="response" type="service" id=".errored..service_locator.beq5mCo.Symfony\Component\HttpFoundation\Response"/>
      </argument>
    </service>
    <service id=".service_locator.C9JCBPC" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service" id=".errored..service_locator.C9JCBPC.Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.NAYm2rI" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="clientesRepository" type="service" id="App\Repository\ClientesRepository"/>
      </argument>
    </service>
    <service id=".service_locator.srLf9iH" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cliente" type="service" id=".errored..service_locator.srLf9iH.App\Entity\Clientes"/>
      </argument>
    </service>
    <service id=".service_locator.gKAH1sY" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="comentarioshospedajeRepository" type="service" id="App\Repository\ComentarioshospedajeRepository"/>
      </argument>
    </service>
    <service id=".service_locator.UHwoknX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="comentarioshospedaje" type="service" id=".errored..service_locator.UHwoknX.App\Entity\Comentarioshospedaje"/>
      </argument>
    </service>
    <service id=".service_locator.G68MGzR" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="geonameRepository" type="service" id="App\Repository\GeonameRepository"/>
      </argument>
    </service>
    <service id=".service_locator.dILx7bj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="habitacionesRepository" type="service" id="App\Repository\HabitacionesRepository"/>
      </argument>
    </service>
    <service id=".service_locator.eqnmxvT" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="habitacione" type="service" id=".errored..service_locator.eqnmxvT.App\Entity\Habitaciones"/>
      </argument>
    </service>
    <service id=".service_locator.uoss5.j" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="hospedajeRepository" type="service" id="App\Repository\HospedajeRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Y.FqaH_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="hospedaje" type="service" id=".errored..service_locator.Y.FqaH_.App\Entity\Hospedaje"/>
      </argument>
    </service>
    <service id=".service_locator.F2hCTsa" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="perfilRepository" type="service" id="App\Repository\PerfilRepository"/>
      </argument>
    </service>
    <service id=".service_locator.ZJ8.Xeu" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="perfil" type="service" id=".errored..service_locator.ZJ8.Xeu.App\Entity\Perfil"/>
      </argument>
    </service>
    <service id=".service_locator.aZBFiOV" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticator" type="service" id="App\Security\AutentificadorAuthenticator"/>
        <argument key="guardHandler" type="service" id="security.authentication.guard_handler"/>
        <argument key="passwordEncoder" type="service" id="security.user_password_encoder.generic"/>
      </argument>
    </service>
    <service id=".service_locator.NShoOwh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reservasRepository" type="service" id="App\Repository\ReservasRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Bmzu9Fg" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reserva" type="service" id=".errored..service_locator.Bmzu9Fg.App\Entity\Reservas"/>
      </argument>
    </service>
    <service id=".service_locator.xA8Fw_." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationUtils" type="service" id="security.authentication_utils"/>
      </argument>
    </service>
    <service id=".service_locator.tqZlqUD" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="serviciosRepository" type="service" id="App\Repository\ServiciosRepository"/>
      </argument>
    </service>
    <service id=".service_locator.ACVLdjH" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="servicio" type="service" id=".errored..service_locator.ACVLdjH.App\Entity\Servicios"/>
      </argument>
    </service>
    <service id=".service_locator.mG4EHRd" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="tipohospedajeRepository" type="service" id="App\Repository\TipohospedajeRepository"/>
      </argument>
    </service>
    <service id=".service_locator.SO67mA5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="tipohospedaje" type="service" id=".errored..service_locator.SO67mA5.App\Entity\Tipohospedaje"/>
      </argument>
    </service>
    <service id=".service_locator.JR.CD6s" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\ClientesController::delete" type="service" id=".service_locator.srLf9iH"/>
        <argument key="App\Controller\ClientesController::edit" type="service" id=".service_locator.srLf9iH"/>
        <argument key="App\Controller\ClientesController::index" type="service" id=".service_locator.NAYm2rI"/>
        <argument key="App\Controller\ClientesController::show" type="service" id=".service_locator.srLf9iH"/>
        <argument key="App\Controller\ComentarioshospedajeController::delete" type="service" id=".service_locator.UHwoknX"/>
        <argument key="App\Controller\ComentarioshospedajeController::edit" type="service" id=".service_locator.UHwoknX"/>
        <argument key="App\Controller\ComentarioshospedajeController::index" type="service" id=".service_locator.gKAH1sY"/>
        <argument key="App\Controller\ComentarioshospedajeController::show" type="service" id=".service_locator.UHwoknX"/>
        <argument key="App\Controller\GeonameController::listComunidades" type="service" id=".service_locator.G68MGzR"/>
        <argument key="App\Controller\GeonameController::listPoblacion" type="service" id=".service_locator.G68MGzR"/>
        <argument key="App\Controller\GeonameController::listProvincias" type="service" id=".service_locator.G68MGzR"/>
        <argument key="App\Controller\HabitacionesController::edit" type="service" id=".service_locator.eqnmxvT"/>
        <argument key="App\Controller\HabitacionesController::index" type="service" id=".service_locator.dILx7bj"/>
        <argument key="App\Controller\HabitacionesController::show" type="service" id=".service_locator.eqnmxvT"/>
        <argument key="App\Controller\HospedajeController::delete" type="service" id=".service_locator.Y.FqaH_"/>
        <argument key="App\Controller\HospedajeController::edit" type="service" id=".service_locator.Y.FqaH_"/>
        <argument key="App\Controller\HospedajeController::index" type="service" id=".service_locator.uoss5.j"/>
        <argument key="App\Controller\HospedajeController::show" type="service" id=".service_locator.Y.FqaH_"/>
        <argument key="App\Controller\PerfilController::delete" type="service" id=".service_locator.ZJ8.Xeu"/>
        <argument key="App\Controller\PerfilController::edit" type="service" id=".service_locator.ZJ8.Xeu"/>
        <argument key="App\Controller\PerfilController::index" type="service" id=".service_locator.F2hCTsa"/>
        <argument key="App\Controller\PerfilController::show" type="service" id=".service_locator.ZJ8.Xeu"/>
        <argument key="App\Controller\ProveedoresController::registerProvider" type="service" id=".service_locator.aZBFiOV"/>
        <argument key="App\Controller\RegistrousuarioController::registerUser" type="service" id=".service_locator.aZBFiOV"/>
        <argument key="App\Controller\ReservasController::delete" type="service" id=".service_locator.Bmzu9Fg"/>
        <argument key="App\Controller\ReservasController::edit" type="service" id=".service_locator.Bmzu9Fg"/>
        <argument key="App\Controller\ReservasController::index" type="service" id=".service_locator.NShoOwh"/>
        <argument key="App\Controller\ReservasController::show" type="service" id=".service_locator.Bmzu9Fg"/>
        <argument key="App\Controller\SeguridadController::login" type="service" id=".service_locator.xA8Fw_."/>
        <argument key="App\Controller\ServiciosController::delete" type="service" id=".service_locator.ACVLdjH"/>
        <argument key="App\Controller\ServiciosController::edit" type="service" id=".service_locator.ACVLdjH"/>
        <argument key="App\Controller\ServiciosController::index" type="service" id=".service_locator.tqZlqUD"/>
        <argument key="App\Controller\ServiciosController::show" type="service" id=".service_locator.ACVLdjH"/>
        <argument key="App\Controller\TipohospedajeController::delete" type="service" id=".service_locator.SO67mA5"/>
        <argument key="App\Controller\TipohospedajeController::edit" type="service" id=".service_locator.SO67mA5"/>
        <argument key="App\Controller\TipohospedajeController::index" type="service" id=".service_locator.mG4EHRd"/>
        <argument key="App\Controller\TipohospedajeController::show" type="service" id=".service_locator.SO67mA5"/>
        <argument key="App\Kernel::loadRoutes" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="App\Kernel::registerContainerConfiguration" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="App\Kernel::terminate" type="service" id=".service_locator.beq5mCo"/>
        <argument key="kernel::loadRoutes" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="kernel::registerContainerConfiguration" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="kernel::terminate" type="service" id=".service_locator.beq5mCo"/>
        <argument key="App\Controller\ClientesController:delete" type="service" id=".service_locator.srLf9iH"/>
        <argument key="App\Controller\ClientesController:edit" type="service" id=".service_locator.srLf9iH"/>
        <argument key="App\Controller\ClientesController:index" type="service" id=".service_locator.NAYm2rI"/>
        <argument key="App\Controller\ClientesController:show" type="service" id=".service_locator.srLf9iH"/>
        <argument key="App\Controller\ComentarioshospedajeController:delete" type="service" id=".service_locator.UHwoknX"/>
        <argument key="App\Controller\ComentarioshospedajeController:edit" type="service" id=".service_locator.UHwoknX"/>
        <argument key="App\Controller\ComentarioshospedajeController:index" type="service" id=".service_locator.gKAH1sY"/>
        <argument key="App\Controller\ComentarioshospedajeController:show" type="service" id=".service_locator.UHwoknX"/>
        <argument key="App\Controller\GeonameController:listComunidades" type="service" id=".service_locator.G68MGzR"/>
        <argument key="App\Controller\GeonameController:listPoblacion" type="service" id=".service_locator.G68MGzR"/>
        <argument key="App\Controller\GeonameController:listProvincias" type="service" id=".service_locator.G68MGzR"/>
        <argument key="App\Controller\HabitacionesController:edit" type="service" id=".service_locator.eqnmxvT"/>
        <argument key="App\Controller\HabitacionesController:index" type="service" id=".service_locator.dILx7bj"/>
        <argument key="App\Controller\HabitacionesController:show" type="service" id=".service_locator.eqnmxvT"/>
        <argument key="App\Controller\HospedajeController:delete" type="service" id=".service_locator.Y.FqaH_"/>
        <argument key="App\Controller\HospedajeController:edit" type="service" id=".service_locator.Y.FqaH_"/>
        <argument key="App\Controller\HospedajeController:index" type="service" id=".service_locator.uoss5.j"/>
        <argument key="App\Controller\HospedajeController:show" type="service" id=".service_locator.Y.FqaH_"/>
        <argument key="App\Controller\PerfilController:delete" type="service" id=".service_locator.ZJ8.Xeu"/>
        <argument key="App\Controller\PerfilController:edit" type="service" id=".service_locator.ZJ8.Xeu"/>
        <argument key="App\Controller\PerfilController:index" type="service" id=".service_locator.F2hCTsa"/>
        <argument key="App\Controller\PerfilController:show" type="service" id=".service_locator.ZJ8.Xeu"/>
        <argument key="App\Controller\ProveedoresController:registerProvider" type="service" id=".service_locator.aZBFiOV"/>
        <argument key="App\Controller\RegistrousuarioController:registerUser" type="service" id=".service_locator.aZBFiOV"/>
        <argument key="App\Controller\ReservasController:delete" type="service" id=".service_locator.Bmzu9Fg"/>
        <argument key="App\Controller\ReservasController:edit" type="service" id=".service_locator.Bmzu9Fg"/>
        <argument key="App\Controller\ReservasController:index" type="service" id=".service_locator.NShoOwh"/>
        <argument key="App\Controller\ReservasController:show" type="service" id=".service_locator.Bmzu9Fg"/>
        <argument key="App\Controller\SeguridadController:login" type="service" id=".service_locator.xA8Fw_."/>
        <argument key="App\Controller\ServiciosController:delete" type="service" id=".service_locator.ACVLdjH"/>
        <argument key="App\Controller\ServiciosController:edit" type="service" id=".service_locator.ACVLdjH"/>
        <argument key="App\Controller\ServiciosController:index" type="service" id=".service_locator.tqZlqUD"/>
        <argument key="App\Controller\ServiciosController:show" type="service" id=".service_locator.ACVLdjH"/>
        <argument key="App\Controller\TipohospedajeController:delete" type="service" id=".service_locator.SO67mA5"/>
        <argument key="App\Controller\TipohospedajeController:edit" type="service" id=".service_locator.SO67mA5"/>
        <argument key="App\Controller\TipohospedajeController:index" type="service" id=".service_locator.mG4EHRd"/>
        <argument key="App\Controller\TipohospedajeController:show" type="service" id=".service_locator.SO67mA5"/>
        <argument key="kernel:loadRoutes" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="kernel:registerContainerConfiguration" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="kernel:terminate" type="service" id=".service_locator.beq5mCo"/>
      </argument>
    </service>
    <service id=".service_locator.Xl5XdWY" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service" id="validator.not_compromised_password"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.Vt79qxb" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver"/>
      <argument type="service" id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.StcfchA" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Form\ClientesType" type="service" id="App\Form\ClientesType"/>
        <argument key="App\Form\ComentarioshospedajeType" type="service" id="App\Form\ComentarioshospedajeType"/>
        <argument key="App\Form\HabitacionesType" type="service" id="App\Form\HabitacionesType"/>
        <argument key="App\Form\HospedajeType" type="service" id="App\Form\HospedajeType"/>
        <argument key="App\Form\MultimediaType" type="service" id="App\Form\MultimediaType"/>
        <argument key="App\Form\PerfilType" type="service" id="App\Form\PerfilType"/>
        <argument key="App\Form\ReservasType" type="service" id="App\Form\ReservasType"/>
        <argument key="App\Form\ServiciosType" type="service" id="App\Form\ServiciosType"/>
        <argument key="App\Form\ServicioshabitacionesType" type="service" id="App\Form\ServicioshabitacionesType"/>
        <argument key="App\Form\TipohospedajeType" type="service" id="App\Form\TipohospedajeType"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\CrudFormType" type="service" id="EasyCorp\Bundle\EasyAdminBundle\Form\Type\CrudFormType"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FiltersFormType" type="service" id="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FiltersFormType"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ColorType" type="service" id="form.type.color"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.simple_role_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.listener.csrf_token_clearing" class="Symfony\Component\Security\Http\EventListener\CsrfTokenClearingLogoutListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="security.ldap_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id=".service_locator.xxFfgCP" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </argument>
    </service>
    <service id=".service_locator.exAOYo1" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Repository\AutocompleteRepository" type="service" id="App\Repository\AutocompleteRepository"/>
        <argument key="App\Repository\ClientesRepository" type="service" id="App\Repository\ClientesRepository"/>
        <argument key="App\Repository\ComentarioshospedajeRepository" type="service" id="App\Repository\ComentarioshospedajeRepository"/>
        <argument key="App\Repository\GeonameRepository" type="service" id="App\Repository\GeonameRepository"/>
        <argument key="App\Repository\HabitacionesRepository" type="service" id="App\Repository\HabitacionesRepository"/>
        <argument key="App\Repository\HospedajeRepository" type="service" id="App\Repository\HospedajeRepository"/>
        <argument key="App\Repository\MultimediaRepository" type="service" id="App\Repository\MultimediaRepository"/>
        <argument key="App\Repository\PerfilRepository" type="service" id="App\Repository\PerfilRepository"/>
        <argument key="App\Repository\ProveedoresRepository" type="service" id="App\Repository\ProveedoresRepository"/>
        <argument key="App\Repository\ReservasRepository" type="service" id="App\Repository\ReservasRepository"/>
        <argument key="App\Repository\ServiciosRepository" type="service" id="App\Repository\ServiciosRepository"/>
        <argument key="App\Repository\ServicioshabitacionesRepository" type="service" id="App\Repository\ServicioshabitacionesRepository"/>
        <argument key="App\Repository\TipohospedajeRepository" type="service" id="App\Repository\TipohospedajeRepository"/>
      </argument>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.http_client" class="Symfony\Bridge\Monolog\Logger">
      <argument>http_client</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.6RweocE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.g9CqTPp" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\AutocompleteController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\AutocompleteController"/>
      <argument>App\Controller\AutocompleteController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\ClientesController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\ClientesController"/>
      <argument>App\Controller\ClientesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\ComentarioshospedajeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\ComentarioshospedajeController"/>
      <argument>App\Controller\ComentarioshospedajeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\GeonameController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\GeonameController"/>
      <argument>App\Controller\GeonameController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\HabitacionesController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\HabitacionesController"/>
      <argument>App\Controller\HabitacionesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\HomeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\HomeController"/>
      <argument>App\Controller\HomeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\HospedajeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\HospedajeController"/>
      <argument>App\Controller\HospedajeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\MultimediaController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\MultimediaController"/>
      <argument>App\Controller\MultimediaController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\PerfilController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\PerfilController"/>
      <argument>App\Controller\PerfilController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\ProveedoresController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\ProveedoresController"/>
      <argument>App\Controller\ProveedoresController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\RegistrousuarioController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\RegistrousuarioController"/>
      <argument>App\Controller\RegistrousuarioController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\ReservasController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\ReservasController"/>
      <argument>App\Controller\ReservasController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\SeguridadController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\SeguridadController"/>
      <argument>App\Controller\SeguridadController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\ServiciosController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\ServiciosController"/>
      <argument>App\Controller\ServiciosController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\ServicioshabitacionesController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\ServicioshabitacionesController"/>
      <argument>App\Controller\ServicioshabitacionesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.g9CqTPp.App\Controller\TipohospedajeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\TipohospedajeController"/>
      <argument>App\Controller\TipohospedajeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.g9CqTPp" method="withContext"/>
    </service>
    <service id=".service_locator.s2oGJED" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.s2oGJED.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.s2oGJED" method="withContext"/>
    </service>
    <service id=".service_locator.DWvytH9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.DWvytH9.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.DWvytH9" method="withContext"/>
    </service>
    <service id=".service_locator.LHmLVnd" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.LHmLVnd.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.LHmLVnd" method="withContext"/>
    </service>
    <service id=".service_locator.VF.njwi" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.VF.njwi.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.VF.njwi" method="withContext"/>
    </service>
    <service id=".service_locator.Wbzuv5A" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.Wbzuv5A.sensio_framework_extra.view.listener" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="sensio_framework_extra.view.listener"/>
      <argument>sensio_framework_extra.view.listener</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.Wbzuv5A" method="withContext"/>
    </service>
    <service id=".service_locator.hbcatdF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.D0bqbKK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service" id="monolog.logger" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="session_storage" type="service" id="session.storage.native" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.jLgc6By" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="browser" type="service" id="notifier.channel.browser"/>
        <argument key="chat" type="service" id="notifier.channel.chat"/>
        <argument key="email" type="service" id="notifier.channel.email"/>
        <argument key="sms" type="service" id="notifier.channel.sms"/>
      </argument>
    </service>
    <service id=".service_locator.51fe2Cf" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.t1zFPXA" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="env" type="service" id="container.getenv"/>
      </argument>
    </service>
    <service id=".service_locator.nAEpldE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session"/>
      </argument>
    </service>
    <service id=".service_locator.eYaJuY9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="serializer.mapping.cache_class_metadata_factory.inner" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory" public="false">
      <argument type="service" id="serializer.mapping.chain_loader"/>
      <argument>null</argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.simple_role_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
        <argument type="service" id="debug.security.voter.EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver.inner" class="EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator.JR.CD6s"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver" public="false">
      <argument type="service" id=".service_locator.JR.CD6s"/>
    </service>
    <service id=".errored..service_locator.beq5mCo.Symfony\Component\HttpFoundation\Response" class="Symfony\Component\HttpFoundation\Response"/>
    <service id=".errored..service_locator.C9JCBPC.Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface"/>
    <service id=".errored..service_locator.srLf9iH.App\Entity\Clientes" class="App\Entity\Clientes"/>
    <service id=".errored..service_locator.UHwoknX.App\Entity\Comentarioshospedaje" class="App\Entity\Comentarioshospedaje"/>
    <service id=".errored..service_locator.eqnmxvT.App\Entity\Habitaciones" class="App\Entity\Habitaciones"/>
    <service id=".errored..service_locator.Y.FqaH_.App\Entity\Hospedaje" class="App\Entity\Hospedaje"/>
    <service id=".errored..service_locator.ZJ8.Xeu.App\Entity\Perfil" class="App\Entity\Perfil"/>
    <service id=".errored..service_locator.Bmzu9Fg.App\Entity\Reservas" class="App\Entity\Reservas"/>
    <service id=".errored..service_locator.ACVLdjH.App\Entity\Servicios" class="App\Entity\Servicios"/>
    <service id=".errored..service_locator.SO67mA5.App\Entity\Tipohospedaje" class="App\Entity\Tipohospedaje"/>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.5HQoc8U"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="make:admin:migration">EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand</argument>
        <argument key="make:admin:dashboard">EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminDashboardCommand</argument>
        <argument key="make:admin:crud">EasyCorp\Bundle\EasyAdminBundle\Command\MakeCrudControllerCommand</argument>
      </argument>
    </service>
    <service id=".service_locator.5HQoc8U" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminDashboardCommand" type="service" id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminDashboardCommand"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand" type="service" id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Command\MakeCrudControllerCommand" type="service" id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeCrudControllerCommand"/>
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_list" type="service" id="console.command.cache_pool_list"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.container_lint" type="service" id="console.command.container_lint"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service" id="console.command.secrets_decrypt_to_local"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service" id="console.command.secrets_encrypt_from_local"/>
        <argument key="console.command.secrets_generate_key" type="service" id="console.command.secrets_generate_key"/>
        <argument key="console.command.secrets_list" type="service" id="console.command.secrets_list"/>
        <argument key="console.command.secrets_remove" type="service" id="console.command.secrets_remove"/>
        <argument key="console.command.secrets_set" type="service" id="console.command.secrets_set"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="doctrine_migrations.diff_command" type="service" id="doctrine_migrations.diff_command"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service" id="doctrine_migrations.dump_schema_command"/>
        <argument key="doctrine_migrations.execute_command" type="service" id="doctrine_migrations.execute_command"/>
        <argument key="doctrine_migrations.generate_command" type="service" id="doctrine_migrations.generate_command"/>
        <argument key="doctrine_migrations.latest_command" type="service" id="doctrine_migrations.latest_command"/>
        <argument key="doctrine_migrations.migrate_command" type="service" id="doctrine_migrations.migrate_command"/>
        <argument key="doctrine_migrations.rollup_command" type="service" id="doctrine_migrations.rollup_command"/>
        <argument key="doctrine_migrations.status_command" type="service" id="doctrine_migrations.status_command"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service" id="doctrine_migrations.up_to_date_command"/>
        <argument key="doctrine_migrations.version_command" type="service" id="doctrine_migrations.version_command"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
      </argument>
    </service>
    <service id=".service_locator.MBcj_p5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry" class="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry" public="false">
      <argument>%env(APP_SECRET)%</argument>
      <argument>C:\xampp\htdocs\Proyecto\trivadog\var\cache\env</argument>
      <argument type="collection"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry" class="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry" public="false">
      <argument>%env(APP_SECRET)%</argument>
      <argument type="collection"/>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false">
      <deprecated package="symfony/dependency-injection" version="5.1">The "%alias_id%" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false">
      <deprecated package="symfony/dependency-injection" version="5.1">The "%alias_id%" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it.</deprecated>
    </service>
    <service id="App\Kernel" alias="kernel" public="true"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Symfony\Component\HttpKernel\UriSigner" alias="uri_signer" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container" public="false"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger" public="false"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.default" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias="http_client"/>
    <service id="mailer" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\MailerInterface" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\Transport\TransportInterface" alias="mailer.default_transport"/>
    <service id="Symfony\Component\Notifier\NotifierInterface" alias="notifier"/>
    <service id="Symfony\Component\Notifier\ChatterInterface" alias="chatter"/>
    <service id="Symfony\Component\Notifier\TexterInterface" alias="texter"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator" public="false"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader" public="false"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor" public="false"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer" public="false"/>
    <service id="translator" alias="translator.default" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer" public="false"/>
    <service id="serializer.property_accessor" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.cache_class_metadata_factory" public="false"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="security.user_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" public="false"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" public="false"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" public="false"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.WaGDpDt" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem" public="false"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.JR.CD6s"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $httpClientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id=".service_locator.AjmrG8B" alias=".service_locator.Xl5XdWY" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="serializer.mapping.class_metadata_factory" alias="serializer.mapping.cache_class_metadata_factory" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver" public="false"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver" alias="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller" public="false"/>
  </services>
</container>
